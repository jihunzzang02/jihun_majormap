def tf(t, d):
    return d.count(t)


def idf(t,docs):
    df = 0
    N = len(docs)
    for doc in docs:
        df += t in doc
    return log(N/(df + 1))


def tfidf(t, d,docs):
    return tf(t,d)* idf(t,docs)



def dtm(): 
    result = []
    for j in range(len(vocab)):
        t = vocab[j]
        result.append(idf(t))

    idf_ = pd.DataFrame(result, index = vocab, columns = ["IDF"])
    return idf_



def final(docs):
    N = len(docs)
    vocab = list(set(w for doc in docs for w in doc.split())) 
    vocab.sort()

    result = []
    for i in range(N):
        result.append([])
        d = docs[i]
        for j in range(len(vocab)):
            t = vocab[j]

            result[-1].append(tfidf(t,d,docs))

    tfidf_ = pd.DataFrame(result, columns = vocab)
    return tfidf_    
